{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:react-hooks/recommended",
    "plugin:eslint-comments/recommended",
    "plugin:promise/recommended",
    "prettier",
    "prettier/react",
    "prettier/@typescript-eslint"
  ],
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "eslint-comments",
    "jsdoc",
    "import",
    "promise"
  ],

  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx", ".d.ts"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".mjs", ".js", ".json", ".ts", ".d.ts"]
      }
    },
    "import/extensions": [".js", ".mjs", ".jsx", ".ts", ".tsx", ".d.ts"],
    "import/external-module-folders": ["node_modules", "node_modules/@types"]
  },
  "env": {
    "es6": true,
    "browser": true,
    "node": true
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "import/prefer-default-export": "off",
    "react/destructuring-assignment": "off",
    "react/jsx-filename-extension": "off",
    "react/no-deprecated": "warn",
    "react/jsx-no-target-blank": "warn",
    "react/no-find-dom-node": "warn",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array"
      }
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "Boolean": "Avoid using the `Boolean` type. Did you mean `boolean`?",
          "Function": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`.",
          "Number": "Avoid using the `Number` type. Did you mean `number`?",
          "Object": "Avoid using the `Object` type. Did you mean `object`?",
          "String": "Avoid using the `String` type. Did you mean `string`?",
          "Symbol": "Avoid using the `Symbol` type. Did you mean `symbol`?"
        }
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },

      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },

      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      { "selector": "class", "format": ["PascalCase"] }
    ],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "never"
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "accessibility": "explicit",
        "overrides": {
          "accessors": "explicit",
          "constructors": "no-public",
          "methods": "explicit",
          "parameterProperties": "off",
          "properties": "explicit"
        }
      }
    ],
    "@typescript-eslint/indent": ["off", 4],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": false
        }
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": ["public-instance-method", "public-static-field"]
      }
    ],
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-object-literal-type-assertion": "off",
    "@typescript-eslint/no-parameter-properties": "error",
    "@typescript-eslint/no-unused-expressions": "warn",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-interface": "off",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/type-annotation-spacing": [
      "error",
      {
        "after": true,
        "before": false,
        "overrides": {
          "arrow": {
            "after": true,
            "before": true
          }
        }
      }
    ],
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/no-unused-vars": "warn",
    "arrow-parens": "off",
    "arrow-spacing": "error",
    "comma-dangle": "off",
    "complexity": "off",
    "constructor-super": "error",
    "curly": "error",
    "default-case": "error",
    "dot-notation": "error",
    "eol-last": "error",
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "guard-for-in": "error",
    "import/named": "off",
    "import/namespace": "off",
    "import/no-default-export": "error",
    "import/no-duplicates": "off",
    "import/no-internal-modules": "off",
    "import/no-unresolved": "off",
    "import/no-self-import": "error",
    "import/order": [
      "error",
      {
        "newlines-between": "always-and-inside-groups"
      }
    ],
    "indent": [
      "error",
      4,
      {
        "SwitchCase": 1
      }
    ],
    "jsdoc/check-alignment": 1,
    "jsdoc/check-examples": 1,
    "jsdoc/check-indentation": 1,
    "jsdoc/check-param-names": 1,
    "jsdoc/check-syntax": 1,
    "jsdoc/check-tag-names": 1,
    "jsdoc/check-types": 1,
    "jsdoc/require-param": 1,
    "jsdoc/require-returns": 1,
    "jsdoc/require-returns-type": 1,
    "jsdoc/valid-types": 1,
    "key-spacing": [
      "error",
      {
        "afterColon": true,
        "beforeColon": false,
        "mode": "strict"
      }
    ],
    "keyword-spacing": [
      "error",
      {
        "before": true
      }
    ],
    "max-classes-per-file": ["error", 1],

    "max-len": [
      "error",
      {
        "code": 160,
        "tabWidth": 4
      }
    ],
    "max-lines": [
      "warn",
      {
        "skipComments": true
      }
    ],
    "new-parens": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-case-declarations": "off",
    "no-cond-assign": "error",
    "no-console": "error",
    "no-debugger": "error",
    "no-dupe-class-members": "off",
    "no-empty": "error",
    "no-eval": "error",
    "no-fallthrough": "off",
    "no-invalid-this": "off",
    "no-labels": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 1,
        "maxBOF": 0
      }
    ],
    "no-new-wrappers": "error",
    "no-parameter-properties": "off",
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": [
      "error",
      {
        "ignoreDeclarationMerge": true
      }
    ],
    "no-return-await": "error",
    "no-require-imports": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "no-unexpected-multiline": "off",
    "no-unsafe-finally": "error",
    "no-unused-labels": "error",
    "no-use-before-define": "off",
    "no-var": "error",
    "object-curly-spacing": ["error", "always"],
    "object-shorthand": "error",
    "one-var": [
      "error",
      {
        "const": "never",
        "let": "never",
        "var": "never"
      }
    ],
    "prefer-arrow-callback": [
      "error",
      {
        "allowNamedFunctions": true
      }
    ],
    "prefer-const": "error",
    "quote-props": ["error", "consistent-as-needed"],
    "quotes": [
      "error",
      "double",
      {
        "avoidEscape": true
      }
    ],
    "radix": "error",
    "react/display-name": "off",
    "react/jsx-boolean-value": "off",
    "react/jsx-curly-spacing": "off",
    "react/jsx-equals-spacing": ["error", "never"],
    "react/jsx-indent": ["off", 4],
    "react/jsx-indent-props": ["off", 4],
    "react/jsx-key": "error",
    "react/jsx-no-bind": "error",
    "react/jsx-tag-spacing": [
      "error",
      {
        "afterOpening": "never",
        "beforeClosing": "allow",
        "beforeSelfClosing": "always",
        "closingSlash": "never"
      }
    ],
    "react/jsx-wrap-multilines": "error",
    "react/no-children-prop": "off",
    "react/no-string-refs": "error",
    "react/no-unescaped-entities": "off",
    "react/prop-types": "off",
    "react/forbid-dom-props": [1, { "forbid": ["style"] }],
    "semi": ["error", "always"],
    "sort-imports": "off",
    "sort-keys": "off",
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "asyncArrow": "always",
        "named": "never"
      }
    ],
    "spaced-comment": [2, "always"],
    "use-isnan": "error",
    "no-prototype-builtins": "warn",
    "no-extra-boolean-cast": "warn",
    "no-empty-pattern": "warn",
    "eslint-comments/disable-enable-pair": ["warn", { "allowWholeFile": true }],
    "promise/catch-or-return": "off"
  }
}
